//
//  bell.swift
//  Contact
//
//  Created by Andrew O'Brien on 11/26/19.
//  Copyright Â© 2019 Andrew O'Brien. All rights reserved.
//

import Foundation
import UIKit

class bell: NiblessView {
    override init(frame: CGRect) {
        super.init(frame: frame)
    }
    
    convenience init() {
        self.init(frame: CGRect.init(x: 0, y: 0, width: 35, height: 35))
        self.backgroundColor = .clear
    }
    
    override func draw(_ rect: CGRect) {// This code was generated by Trial version of PaintCode, therefore cannot be used for commercial purposes.
        // http://www.paintcodeapp.com
        
        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Group 2
        //// Group 3
        //// Group 4
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 34.48, y: 25.01))
        bezierPath.addCurve(to: CGPoint(x: 29.75, y: 12.25), controlPoint1: CGPoint(x: 30.37, y: 20.89), controlPoint2: CGPoint(x: 29.75, y: 18.83))
        bezierPath.addCurve(to: CGPoint(x: 17.5, y: 0), controlPoint1: CGPoint(x: 29.75, y: 5.48), controlPoint2: CGPoint(x: 24.26, y: 0))
        bezierPath.addCurve(to: CGPoint(x: 5.25, y: 12.25), controlPoint1: CGPoint(x: 10.74, y: 0), controlPoint2: CGPoint(x: 5.25, y: 5.48))
        bezierPath.addCurve(to: CGPoint(x: 4.67, y: 18.75), controlPoint1: CGPoint(x: 5.25, y: 15.8), controlPoint2: CGPoint(x: 5.16, y: 17.12))
        bezierPath.addCurve(to: CGPoint(x: 0.52, y: 25.01), controlPoint1: CGPoint(x: 4.06, y: 20.77), controlPoint2: CGPoint(x: 2.82, y: 22.71))
        bezierPath.addCurve(to: CGPoint(x: 1.75, y: 28), controlPoint1: CGPoint(x: -0.59, y: 26.11), controlPoint2: CGPoint(x: 0.19, y: 28))
        bezierPath.addLine(to: CGPoint(x: 11.46, y: 28))
        bezierPath.addLine(to: CGPoint(x: 11.38, y: 28.87))
        bezierPath.addCurve(to: CGPoint(x: 17.5, y: 35), controlPoint1: CGPoint(x: 11.38, y: 32.26), controlPoint2: CGPoint(x: 14.12, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 23.62, y: 28.87), controlPoint1: CGPoint(x: 20.88, y: 35), controlPoint2: CGPoint(x: 23.62, y: 32.26))
        bezierPath.addLine(to: CGPoint(x: 23.54, y: 28))
        bezierPath.addLine(to: CGPoint(x: 33.25, y: 28))
        bezierPath.addCurve(to: CGPoint(x: 34.48, y: 25.01), controlPoint1: CGPoint(x: 34.81, y: 28), controlPoint2: CGPoint(x: 35.59, y: 26.11))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 17.5, y: 33.25))
        bezierPath.addCurve(to: CGPoint(x: 13.13, y: 28.87), controlPoint1: CGPoint(x: 15.09, y: 33.25), controlPoint2: CGPoint(x: 13.13, y: 31.29))
        bezierPath.addLine(to: CGPoint(x: 13.21, y: 28))
        bezierPath.addLine(to: CGPoint(x: 21.79, y: 28))
        bezierPath.addLine(to: CGPoint(x: 21.88, y: 28.87))
        bezierPath.addCurve(to: CGPoint(x: 17.5, y: 33.25), controlPoint1: CGPoint(x: 21.88, y: 31.29), controlPoint2: CGPoint(x: 19.92, y: 33.25))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 1.75, y: 26.25))
        bezierPath.addCurve(to: CGPoint(x: 7, y: 12.25), controlPoint1: CGPoint(x: 7, y: 21), controlPoint2: CGPoint(x: 7, y: 17.5))
        bezierPath.addCurve(to: CGPoint(x: 17.5, y: 1.75), controlPoint1: CGPoint(x: 7, y: 6.45), controlPoint2: CGPoint(x: 11.7, y: 1.75))
        bezierPath.addCurve(to: CGPoint(x: 28, y: 12.25), controlPoint1: CGPoint(x: 23.3, y: 1.75), controlPoint2: CGPoint(x: 28, y: 6.45))
        bezierPath.addCurve(to: CGPoint(x: 33.25, y: 26.25), controlPoint1: CGPoint(x: 28, y: 17.5), controlPoint2: CGPoint(x: 28, y: 21))
        bezierPath.addLine(to: CGPoint(x: 1.75, y: 26.25))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
    }
}
